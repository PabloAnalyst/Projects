#Partial Code on Jupyter Notebook
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os
import numpy as np
import itertools
import scipy.stats
from scipy.stats import chi2_contingency

path = r"C:\database.txt"
df = pd.read_csv(path, sep='§', engine='python')


#Relevant columns are selected
relevant_columns = [
 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10',
'C11', 'C12', 'C13', 'C14', 'C15', 'C16', 'C17', 'C18', 'C19', 'C20',
'C21', 'C22', 'C23', 'C24', 'C25', 'C26', 'C27', 'C28', 'C29', 'C30',
'C31', 'C32', 'C33', 'C34', 'C35', 'C36', 'C37', 'C38', 'C39', 'C40'
]
df = df[relevant_columns]

# Missing value analysis
sns.heatmap(df.isnull(), yticklabels=False, cbar=False, cmap = "Blues")
missing_values = df.isnull()
missing_values_count = df.isnull().sum()
missing_values_percentage = (df.isnull().sum() / len(df)) * 100
print("Missing values per column:")
print(missing_values_count)
print("\%Missing values ​​per column::")
print(missing_values_percentage)

#Convert value type of variables
columns_to_convert = ['C21', 'C22', 'C23', 'C24', 'C25', 'C26']
for column in columns_to_convert:
    df[column] = df[column].str.replace(',', '').astype(float)

#Frequency analysis
df.hist(bins=7,figsize=(20,15))

# Box and whisker plots depicting highlighted variables, with identification of outliers.
filtered_df = df[df['C1'].isin(['C4', 'C7','C6'])]
plt.figure(figsize=(8, 3)) 
filtered_df.boxplot(by='C1', column=['C3'], grid=False)
plt.title('C4')
plt.xlabel('C1')
plt.ylabel('C6')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()


#Correlation between variables
Variables=['C32', 'C33', 'C34', 'C35', 'C36', 'C37', 'C38', 'C39', 'C40']
Data_variables=df[Variables]
correlations = Data_variables.corr()
f, ax = plt.subplots(figsize = (20,20))
sns.heatmap(correlations, annot=True)

#Spearman correlation coefficient between variables
spearman_corr_2, _ = scipy.stats.spearmanr(df.valor_cuota, df.intc_pagar)
print(f"Spearman correlation C1 VS C2: {spearman_corr_2}")
print(f"Spearman correlation C5 VS C7:: {spearman_corr_3}")
spearman_corr_4, _ = scipy.stats.spearmanr(df.C1, df.C2)

#Chi-square statistic,P-value,Cramer's V statistic
variable1 = df['C23']
variable2 = df['C24']

table = pd.crosstab(variable1, variable2)

chi2, p_value, _, _ = chi2_contingency(table)


n = table.sum().sum()
k = table.shape[1]
r = table.shape[0]
v_cramer = np.sqrt(chi2 / (n * min(k-1, r-1)))

print(f"Chi-square statistics: {chi2}")
print(f"P-value: {p_value}")
print(f"Cramer's V statistic: {v_cramer}")