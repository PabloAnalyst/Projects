#Partial code in Jupyter Notebook

#Load necessary libraries for Analisis
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.edge.service import Service
from selenium.webdriver.edge.options import Options
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from selenium import webdriver
from bs4 import BeautifulSoup
import pandas as pd

#Load the necessary data framework to review or save information
file_path = r'C:\DB.xlsx'
df = pd.read_excel(file_path)
print(df.head())

# Driver ON EDGE
driver = webdriver.Edge()
driver.get("web.com")
current_window_handle = driver.current_window_handle
driver.switch_to.window(current_window_handle)

wait = WebDriverWait(driver, 10) 

# LOGIN
username_input = wait.until(EC.presence_of_element_located((By.ID, "username")))
username_input.send_keys("name1234")
password_input = wait.until(EC.presence_of_element_located((By.ID, "password")))
password_input.send_keys("PASS02%&")
sign_in_button = wait.until(EC.presence_of_element_located((By.ID, "signButton")))
sign_in_button.click()

# CLICK BUTTONS
link_element = wait.until(EC.element_to_be_clickable((By.XPATH, "//a[text()='BUTTON1']")))
link_element.click()
button_span = wait.until(EC.element_to_be_clickable((By.XPATH, "//span[text()='BUTTON2']")))
button_span.click()



#LOOP TO SEARCH DATAFRAME INFORMATION ON THE WEB ENVIRONMENT 
#AND EXTRACT INFORMATION FROM A SPECIFIC TABLE

for i in range(len(df)):
    # Get the value of the DataFrame at position i
    value = str(df.iloc[i, 0])
    
    driver.switch_to.window(current_window_handle)
    
    # Find the text box and get the current value
    text_field = driver.find_element(By.CSS_SELECTOR, ".pwdigadet")
    text_field.clear()
    text_field.send_keys(value)

    # CLICK ON DIFFERENT LINKS, WITH WAITING TIMES
    boton_search = driver.find_element(By.CSS_SELECTOR, "selector1")
    boton_search.click()
    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "selector2"))
    enlace = driver.find_element(By.CSS_SELECTOR, "selector3")
    enlace.click()
    
    # EXTRACT PATH INFORMATION AND PRINT 
    texto_fila = driver.find_element(By.XPATH, '//*[@id="site"]/didiv/div').text
    print("INFO", texto_fila)

    # SAVE INFORMATION IN DATAFRAME
    df.loc[i, "Column1"] = text_field

    # RETURN TO HOME PAGE LOOP START
    driver.close()
    driver.switch_to.window(driver.window_handles[0])
    wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="abcds"]/')))
    if i < len(df) - 1:
        # Hacer clic en el segundo enlace
        Link = wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id="sites2"]/div/a')))
        Link.click()
